spring:
  cache:
    type: redis
  cloud:
    gateway:
      default-filters:
        - TokenRelay
      routes:
        - id: product-resource-server
          uri: http://localhost:9191
          predicates:
            - Path=/product/**
        - id: user-resource-server
          uri: http://localhost:9191
          predicates:
            - Path=/market/**
  security:
    oauth2:
      client:
        provider:
          my-keycloak-provider:
            issuer-uri: http://localhost:8080/realms/cargoes
            # Individual properties can also be provided this way
#            token-uri: http://localhost:8080/auth/realms/amrutrealm/protocol/openid-connect/token
#            authorization-uri: http://localhost:8080/auth/realms/amrutrealm/protocol/openid-connect/auth
#            userinfo-uri: http://localhost:8080/auth/realms/amrutrealm/protocol/openid-connect/userinfo
#            user-name-attribute: preferred_username
        registration:
          keycloak-spring-gateway-client:
            provider: my-keycloak-provider
            scope: openid
            client-id: login-app
            client-secret: NYcLPDlSEaDSbXrD9cKbN8cbw8MDnDpv
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/keycloak"
#  session:
#    store-type: redis
#  redis:
#    host: localhost
#    port: 6379

logging:
    level:
      org:
        springframework:
          security:
            web: DEBUG
server:
  port: 9090

management:
  endpoints:
    web:
      exposure:
        include: "*"

